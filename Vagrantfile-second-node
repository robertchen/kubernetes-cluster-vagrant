$script = <<-SCRIPT
#install docker
add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
# Install kubernetes
apt-get update && apt-get install -y apt-transport-https docker-ce=18.06.0~ce~3-0~ubuntu
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb http://apt.kubernetes.io/ kubernetes-xenial main
EOF
apt-get update
apt-get install -y kubelet kubeadm kubectl
# kubelet requires swap off
swapoff -a
# keep swap off after reboot
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
# sed -i '/ExecStart=/a Environment="KUBELET_EXTRA_ARGS=--cgroup-driver=cgroupfs"' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
sed -i '0,/ExecStart=/s//Environment="KUBELET_EXTRA_ARGS=--cgroup-driver=cgroupfs"\\n&/' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
# Get the IP address that VirtualBox has given this VM
#IPADDR=`ifconfig enp0s8 | grep Mask | awk '{print $2}'| cut -f2 -d:`
IPADDR='172.17.8.212'
echo This VM has IP address $IPADDR
# Set up Kubernetes
NODENAME=$(hostname -s)
#kubeadm init --apiserver-cert-extra-sans=$IPADDR  --node-name $NODENAME --pod-network-cidr 192.168.0.0/16
#kubeadm join 172.17.8.211:6443 --token ppo6yg.q2zooup6udo0i4aj --discovery-token-ca-cert-hash sha256:2159d9229c6ff173406614e835733f21000a687b0dc24c309698d5fb4d1d73e7
kubeadm join 172.17.8.211:6443 --token tkbdaa.qnksoj2re6mm0ef4 --discovery-token-ca-cert-hash sha256:01564fc19c5a4586cd6754b75d312131cd513c678544a2658b8d86694e1efee3
# Set up admin creds for the vagrant user
#echo Copying credentials to /home/vagrant...
#sudo --user=vagrant mkdir -p /home/vagrant/.kube
#cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
#chown $(id -u vagrant):$(id -g vagrant) /home/vagrant/.kube/config
SCRIPT

Vagrant.configure("2") do |config|
  # Specify your hostname if you like
#  config.vm.hostname = "kcluster-calico"
#  config.vm.box = "bento/ubuntu-18.04"
#  ip = "172.17.8.202"
#  config.vm.network "private_network", ip: ip
#  config.vm.provision "docker"
#  config.vm.provision "shell", inline: $script
  config.vm.define :"kcluster-calico2" do |node|
    ip = "172.17.8.212"
    node.vm.box= "bento/ubuntu-18.04"
    node.vm.hostname = "kcluster-calico2"
    node.vm.network "private_network", ip: ip
    node.vm.provider "virtualbox" do |vb|
      vb.name = "kcluster-calico2"
      vb.memory = "2096"
      vb.cpus = 1
    end
    node.vm.provision "shell", inline: $script
  end
end
